!function(o){var e={};function r(t){if(e[t])return e[t].exports;var n=e[t]={i:t,l:!1,exports:{}};return o[t].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=o,r.c=e,r.d=function(o,e,t){r.o(o,e)||Object.defineProperty(o,e,{enumerable:!0,get:t})},r.r=function(o){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})},r.t=function(o,e){if(1&e&&(o=r(o)),8&e)return o;if(4&e&&"object"==typeof o&&o&&o.__esModule)return o;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:o}),2&e&&"string"!=typeof o)for(var n in o)r.d(t,n,function(e){return o[e]}.bind(null,n));return t},r.n=function(o){var e=o&&o.__esModule?function(){return o.default}:function(){return o};return r.d(e,"a",e),e},r.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},r.p="",r(r.s=0)}([function(o,e,r){"use strict";r.r(e),r.d(e,"isDirector",(function(){return c}));var t=function(){function o(){}return o.prototype.workFromHome=function(){return"Working from home"},o.prototype.getCoffeeBreak=function(){return"Getting a coffee break"},o.prototype.workDirectorTasks=function(){return"Getting to director tasks"},o}(),n=function(){function o(){}return o.prototype.workFromHome=function(){return"Cannot work from home"},o.prototype.getCoffeeBreak=function(){return"Cannot have a break"},o.prototype.workTeacherTasks=function(){return"Getting to work"},o}();function l(o){return"number"==typeof o&&o<500?(console.log("Teacher"),new n):(console.log("Director"),new t)}function c(o){return void 0!==o.workDirectorTasks}function s(o){return c(o)?o.workDirectorTasks():o.workTeacherTasks()}function a(o){return"Math"===o?"Teaching Math":"History"===o?"Teaching History":void 0}console.log(l(200)),console.log(l(1e3)),console.log(l("$500")),console.log("--- createEmployee examples ---"),console.log("Employee with salary $200:");var i=l(200);console.log("Work from home status: "+i.workFromHome()),console.log("Coffee break status: "+i.getCoffeeBreak()),i.workTeacherTasks&&console.log(i.workTeacherTasks()),console.log("\nEmployee with salary $600:");var u=l(600);console.log("Work from home status: "+u.workFromHome()),console.log("Coffee break status: "+u.getCoffeeBreak()),u.workDirectorTasks&&console.log(u.workDirectorTasks()),console.log("\nEmployee with string salary '300':");var f=l("300");console.log(f.workFromHome()),console.log("\nEmployee with string salary '700':");var g=l("700");console.log(g.workFromHome()),console.log("\nEmployee with invalid string salary 'abc':");var k=l("abc");console.log(k.workFromHome()),console.log("\n--- isDirector and executeWork examples ---");var m=l(200),p=l(1e3);console.log("Is employeeA a Director? "+c(m)),console.log("Is employeeB a Director? "+c(p)),console.log("Employee A executes work: "+s(m)),console.log("Employee B executes work: "+s(p)),console.log(a("Math")),console.log(a("History"));console.log(a("Math"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,