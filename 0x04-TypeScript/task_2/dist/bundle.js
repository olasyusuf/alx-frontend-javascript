!function(o){var e={};function r(n){if(e[n])return e[n].exports;var t=e[n]={i:n,l:!1,exports:{}};return o[n].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.m=o,r.c=e,r.d=function(o,e,n){r.o(o,e)||Object.defineProperty(o,e,{enumerable:!0,get:n})},r.r=function(o){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})},r.t=function(o,e){if(1&e&&(o=r(o)),8&e)return o;if(4&e&&"object"==typeof o&&o&&o.__esModule)return o;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:o}),2&e&&"string"!=typeof o)for(var t in o)r.d(n,t,function(e){return o[e]}.bind(null,t));return n},r.n=function(o){var e=o&&o.__esModule?function(){return o.default}:function(){return o};return r.d(e,"a",e),e},r.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},r.p="",r(r.s=0)}([function(o,e){var r=function(){function o(){}return o.prototype.workFromHome=function(){return"Working from home"},o.prototype.getCoffeeBreak=function(){return"Getting a coffee break"},o.prototype.workDirectorTasks=function(){return"Getting to director tasks"},o}(),n=function(){function o(){}return o.prototype.workFromHome=function(){return"Cannot work from home"},o.prototype.getCoffeeBreak=function(){return"Cannot have a break"},o.prototype.workTeacherTasks=function(){return"Getting to work"},o}();function t(o){var e="string"==typeof o?parseFloat(o):o;return"number"==typeof e&&!isNaN(e)&&e<500?(console.log("Teacher"),new n):(console.log("Director"),new r)}console.log(t(200)),console.log(t(1e3)),console.log(t("$500")),console.log("Employee with salary $200:");var l=t(200);console.log(l.workFromHome()),console.log(l.getCoffeeBreak()),l.workTeacherTasks&&console.log(l.workTeacherTasks()),console.log("\nEmployee with salary $600:");var a=t(600);console.log(a.workFromHome()),console.log(a.getCoffeeBreak()),a.workDirectorTasks&&console.log(a.workDirectorTasks()),console.log("\nEmployee with string salary '300':");var c=t("300");console.log(c.workFromHome()),console.log("\nEmployee with string salary '700':");var i=t("700");console.log(i.workFromHome()),console.log("\nEmployee with invalid string salary 'abc':");var u=t("abc");console.log(u.workFromHome())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,